
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() { return request.auth != null; }
    function userRole() { return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role; }
    function isKetua() { return userRole() == 'super_admin'; }
    function isWakil() { return userRole() == 'wakil_admin'; }
    function isSekretaris() { return userRole() == 'sekretaris'; }
    function isBendahara() { return userRole() == 'bendahara'; }
    function isKontributor() { return ['kontributor','sekretaris','bendahara','wakil_admin','super_admin'].has(userRole()); }
    function isAdmin() { return isKetua() || isWakil(); }

    match /sistem/{docId} { allow read: if isSignedIn(); allow write: if isAdmin(); }
    match /pengumuman/{id} { allow read: if isSignedIn(); allow write: if isAdmin(); }

    match /users/{uid} {
      allow create: if isSignedIn() && request.auth.uid == uid;
      allow read: if isSignedIn() && (request.auth.uid == uid || isAdmin());
      allow update: if isSignedIn() && (request.auth.uid == uid || isKetua());
      allow delete: if isKetua();
    }

    match /kas/{id} { allow read: if isSignedIn(); allow create, update, delete: if isAdmin() || isBendahara(); }
    match /berita/{id} { allow read: if isSignedIn(); allow create, update, delete: if isAdmin() || isSekretaris(); }
    match /pasar/{id} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update, delete: if isAdmin() || request.auth.uid == resource.data.owner;
    }
    match /forum/{id} { allow read: if isSignedIn(); allow create: if isSignedIn(); allow update, delete: if isAdmin() || request.auth.uid == resource.data.owner; }
  }
}
